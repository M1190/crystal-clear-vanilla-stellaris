############################
#
# Expanded gamestart Events
#
############################

# 15 free

namespace = onactionpops

# Terraforming Tomb and Relic Worlds
planet_event = {
	id = onactionpops.1
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			is_planet_class = pc_nuked
			is_planet_class = pc_relic
		}
	}
	
	immediate = {
		owner = {
			remove_country_flag = memorialist_terraformed_relic
			set_timed_country_flag = { flag = memorialist_terraformed_relic days = 7200 }
		}
	}
}

# remote colony stability
country_event = {
	id = onactionpops.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		exists = capital_scope
	}
	
	immediate = {
		capital_scope = {
			save_event_target_as = the_capital
			remove_modifier = remote_colony
			remove_modifier = very_remote_colony
		}
		every_owned_planet = {
			limit = { is_capital = no }
			remove_modifier = remote_colony
			remove_modifier = very_remote_colony
			if = {
				limit = {
					distance = {
						source = event_target:the_capital
						use_bypasses = yes
						min_jumps = 40
					}
				}
				add_modifier = { modifier = very_remote_colony days = -1 }
			}
			else_if = {
				limit = {
					distance = {
						source = event_target:the_capital
						use_bypasses = yes
						min_jumps = 20
					}
				}
				add_modifier = { modifier = remote_colony days = -1 }
			}
		}
	}
}

# Synthetic Mastery Taken
country_event = {
	id = onactionpops.3
	title = "onactionpops.3.name"
	desc = "onactionpops.3.desc"
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_laboratory_sound
	trackable = yes

	is_triggered_only = yes

	option = {
		name = EXCELLENT
	}
}

# New Leaders Get Erudite Trait
country_event = {
	id = onactionpops.4
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = {
				has_trait = trait_avian
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_avian_admiral
			}
		}
	}
}

# New Leaders Get Erudite Trait
country_event = {
	id = onactionpops.5
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			species = {
				has_trait = trait_marine
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = { leader_class = admiral }
				add_trait = leader_trait_aquatic_admiral
			}
		}
	}
}

# Transcendent Learning
country_event = {
	id = onactionpops.6
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_ascension_perk = ap_transcendent_learning
	}
	
	immediate = {
		FROM = { add_skill = 1 }
	}
}

# Non-Gestalt Instability
country_event = {
	id = onactionpops.7
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_gestalt = yes
		NOR = {
			has_valid_civic = civic_hive_devouring_swarm
			has_valid_civic = civic_machine_assimilator
			has_valid_civic = civic_machine_servitor
			has_valid_civic = civic_machine_consciousness
			has_valid_civic = civic_machine_terminator
		}
	}
	
	immediate = {
		if = {
			limit = {
				is_gestalt = yes
				NOR = {
					has_valid_civic = civic_harm_hive
					has_valid_civic = civic_harm_machine
					has_origin = origin_extant_creators
					has_origin = origin_symbiote
				}
				NOR = {
					has_active_tradition = tr_synchronicity_finish
					has_active_tradition = tr_synchronicity_machine_finish
				}
			}
			update_resident_non_gestalt_effect = yes
		}
		else_if = {
			limit = {
				is_gestalt = yes
				NOR = {
					has_valid_civic = civic_harm_hive
					has_valid_civic = civic_harm_machine
					has_origin = origin_extant_creators
					has_origin = origin_symbiote
				}
				OR = {
					has_active_tradition = tr_synchronicity_finish
					has_active_tradition = tr_synchronicity_machine_finish
				}
			}
			update_resident_non_gestalt_harm_effect = yes
		}
		else_if = {
			limit = {
				is_gestalt = yes
				OR = {
					has_valid_civic = civic_harm_hive
					has_valid_civic = civic_harm_machine
					has_origin = origin_extant_creators
					has_origin = origin_symbiote
				}
				NOR = {
					has_active_tradition = tr_synchronicity_finish
					has_active_tradition = tr_synchronicity_machine_finish
				}
			}
			update_resident_non_gestalt_harm_effect = yes
		}
		else = {
			remove_modifier = gestalt_residents_harm_20
			remove_modifier = gestalt_residents_harm_25
			remove_modifier = gestalt_residents_harm_30
			remove_modifier = gestalt_residents_harm_35
			remove_modifier = gestalt_residents_harm_40
			remove_modifier = gestalt_residents_harm_45
			remove_modifier = gestalt_residents_harm_50
			remove_modifier = gestalt_residents_harm_55
			remove_modifier = gestalt_residents_harm_60
			remove_modifier = gestalt_residents_harm_80
		}
	}
}

# Xeno-Tourism has a chance to move pops every 5 years
planet_event = {
	id = onactionpops.8
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_planet_flag = tourism_anti_cheese
		}
		has_branch_office = yes
		exists = branch_office_owner
		OR = {
			has_holding = { holding = building_xeno_tourism_agency owner = branch_office_owner }
			has_holding = { holding = building_xeno_tourism_agency_crime owner = branch_office_owner }
		}
	}
	
	immediate = {
		set_timed_planet_flag = {
			flag = tourism_anti_cheese
			days = 1700
		}
		
		if = {
			limit = {
				num_pops > 25
				branch_office_owner = {
					OR = {
						has_diplo_migration_treaty = root.owner
						is_criminal_syndicate = yes
					}
				}
			}
			random_list = {
				10 = {
					modifier = {
						factor = 1.5
						ROOT = { has_holding = { holding = building_xeno_tourism_agency_crime owner = branch_office_owner } }
					}
					xeno_tourism_pop_effect = yes
				}
				6 = {
					modifier = {
						factor = 1.5
						ROOT = { has_holding = { holding = building_xeno_tourism_agency_crime owner = branch_office_owner } }
					}
					xeno_tourism_pop_effect = yes
					xeno_tourism_pop_effect = yes
				}
				4 = {
					modifier = {
						factor = 1.5
						ROOT = { has_holding = { holding = building_xeno_tourism_agency_crime owner = branch_office_owner } }
					}
					xeno_tourism_pop_effect = yes
					xeno_tourism_pop_effect = yes
					xeno_tourism_pop_effect = yes
				}
				10 = {
				}
			}
		}
		
		planet_event = {
			id = onactionpops.8
			days = 1800
			random = 100
		}
	}
}

# Hunting Lodge causes damages
planet_event = {
	id = onactionpops.9
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_planet_flag = hunting_anti_cheese
		}
		exists = owner.overlord
		OR = {
			has_holding = { holding = holding_hunting_lodge owner = owner.overlord }
		}
	}
	
	immediate = {
		set_timed_planet_flag = {
			flag = hunting_anti_cheese
			days = 1700
		}
		
		random_list = {
			2 = {
				add_planet_devastation = 25
				create_message = {
					type = MESSAGE_OVERLORD_HUNT
					localization = MESSAGE_OVERLORD_HUNT_DEV_DESC
					days = 30
					target = this
					variable = {
						type = name
						localization = PLANET
						scope = this
					}
				}
			}
			2 = {
				modifier = {
					num_pops > 10
				}
				random_owned_pop = {
					kill_pop = yes
				}
				create_message = {
					type = MESSAGE_OVERLORD_HUNT
					localization = MESSAGE_OVERLORD_HUNT_POP_DESC
					days = 30
					target = this
					variable = {
						type = name
						localization = PLANET
						scope = this
					}
				}
			}
			2 = {
				modifier = {
					num_free_districts = {
						type = any
						value > 1
					}
				}
				add_deposit = d_dangerous_wildlife_blocker
				create_message = {
					type = MESSAGE_OVERLORD_HUNT
					localization = MESSAGE_OVERLORD_HUNT_BLOCK_DESC
					days = 30
					target = this
					variable = {
						type = name
						localization = PLANET
						scope = this
					}
				}
			}
			10 = {
			}
		}
		
		planet_event = {
			id = onactionpops.9
			days = 1800
			random = 100
		}
	}
}

# Sell off excessive resources
country_event = {
	id = onactionpops.10
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		is_ai = yes
		OR = {
			is_country_type = default
			is_country_type = ascended_empire
			is_country_type = lost_empire
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
	
	immediate = {
		if = {
			limit = {
				resource_stockpile_compare = { resource = minerals value >= 15000 }
				resource_stockpile_compare = { resource = energy value < 50000 }
			}
			add_resource = {
				minerals = -5000
				energy = 3750
			}
		}
		if = {
			limit = {
				resource_stockpile_compare = { resource = alloys value < 15000 }
				resource_stockpile_compare = { resource = energy value >= 10000 }
			}
			add_resource = {
				alloys = 250
				energy = -1500
			}
		}
		if = {
			limit = {
				resource_stockpile_compare = { resource = food value >= 15000 }
				resource_stockpile_compare = { resource = energy value < 50000 }
			}
			add_resource = {
				food = -5000
				energy = 3750
			}
		}
		if = {
			limit = {
				resource_stockpile_compare = { resource = alloys value < 15000 }
				resource_stockpile_compare = { resource = energy value >= 10000 }
			}
			add_resource = {
				alloys = 250
				energy = -1500
			}
		}
		if = {
			limit = {
				is_gestalt = no
				resource_stockpile_compare = { resource = consumer_goods value < 1000 }
				resource_stockpile_compare = { resource = energy value >= 7500 }
			}
			add_resource = {
				consumer_goods = 250
				energy = -750
			}
		}
		if = {
			limit = {
				resource_stockpile_compare = { resource = consumer_goods value >= 15000 }
				resource_stockpile_compare = { resource = energy value < 50000 }
			}
			add_resource = {
				consumer_goods = -5000
				energy = 7500
			}
		}
		if = {
			limit = {
				resource_stockpile_compare = { resource = alloys value < 15000 }
				resource_stockpile_compare = { resource = energy value >= 10000 }
			}
			add_resource = {
				alloys = 250
				energy = -1500
			}
		}
	}
}

# Pops move out of low habitability planets
country_event = {
	id = onactionpops.11

	hide_window = yes
	is_triggered_only = no
	location = from

	trigger = {
		any_owned_pop = {
			has_migration_control = { value = no }
			planet = {
				habitability = { who = prev value <= 0.30 }
				num_pops > 10
				OR = {
					free_housing <= 0
					free_jobs <= 2
					planet_stability < 50
					PREV = { is_unemployed = yes }
				}
			}
		}
	}

	immediate = {
		random_owned_pop = {
			limit = {
				has_migration_control = { value = no }
				planet = {
					habitability = { who = prev value <= 0.30 }
					num_pops > 10
					OR = {
						free_housing <= 0
						free_jobs <= 2
						planet_stability < 50
						PREV = { is_unemployed = yes }
					}
				}
			}
			save_event_target_as = greater_than_ourselves_target_pop
		}
		random_owned_planet = {
			limit = {
				habitability = { who = event_target:greater_than_ourselves_target_pop value >= 0.5 }
				free_housing >= 1
				free_jobs >= 1
				is_under_colonization = no
				is_controlled_by = owner
				has_orbital_bombardment = no
			}
			save_event_target_as = greater_than_ourselves_target_planet
		}
		random_country = {
			limit = {
				has_diplo_migration_treaty = ROOT
				any_owned_planet = {
					habitability = { who = event_target:greater_than_ourselves_target_pop value >= 0.5 }
					free_housing >= 1
					free_jobs >= 1
					is_under_colonization = no
					is_controlled_by = owner
					has_orbital_bombardment = no
				}
			}
			random_owned_planet = {
				limit = {
					habitability = { who = event_target:greater_than_ourselves_target_pop value >= 0.5 }
					free_housing >= 1
					free_jobs >= 1
					is_under_colonization = no
					is_controlled_by = owner
					has_orbital_bombardment = no
				}
				save_event_target_as = greater_than_ourselves_target_planet_xeno
			}
		}
		random_list = {
			10 = {
			}
			9 = {
				modifier = {
					factor = 0
					NOR = {
						exists = event_target:greater_than_ourselves_target_pop
						exists = event_target:greater_than_ourselves_target_planet
					}
				}
				resettle_pop = {
					pop = event_target:greater_than_ourselves_target_pop
					planet = event_target:greater_than_ourselves_target_planet
				}
				event_target:greater_than_ourselves_target_pop = { clear_pop_category = yes }
			}
			1 = {
				modifier = {
					factor = 0
					NOR = {
						exists = event_target:greater_than_ourselves_target_pop
						exists = event_target:greater_than_ourselves_target_planet_xeno
					}
				}
				resettle_pop = {
					pop = event_target:greater_than_ourselves_target_pop
					planet = event_target:greater_than_ourselves_target_planet_xeno
				}
				event_target:greater_than_ourselves_target_pop = { clear_pop_category = yes }
			}
		}
	}
}

# Killed Planet
planet_event = {
	id = onactionpops.12
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
	}

	immediate = {
		from.owner = {
			remove_country_flag = killed_with_pk
			set_timed_country_flag = { flag = killed_with_pk days = 3600 }
		}
	}
}

# Food Deficit
country_event = {
	id = onactionpops.13
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			AND = {
				is_lithoid_empire = no
				has_deficit = food
			}
			AND = {
				is_lithoid_empire = yes
				has_deficit = minerals
			}
			has_modifier = empire_food_deficit
		}
	}
	
	immediate = {
		if = {
			limit = {
				is_lithoid_empire = no
				has_deficit = food
				NOT = { has_modifier = empire_food_deficit }
			}
			add_modifier = { modifier = empire_food_deficit days = -1 }
		}
		else_if = {
			limit = {
				is_lithoid_empire = yes
				has_deficit = minerals
				NOT = { has_modifier = empire_food_deficit }
			}
			add_modifier = { modifier = empire_food_deficit days = -1 }
		}
		else_if = {
			limit = {
				has_modifier = empire_food_deficit
				NOR = {
					AND = {
						is_lithoid_empire = no
						has_deficit = food
					}
					AND = {
						is_lithoid_empire = yes
						has_deficit = minerals
					}
				}
			}
			remove_modifier = empire_food_deficit
		}
	}
}

# space fauna killed
country_event = {
	id = onactionpops.14
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			is_country_type = origin_dragon
			is_country_type = tiyanki
			is_country_type = tiyanki_garrison
			is_country_type = amoeba
			is_country_type = amoeba_borderless
			is_country_type = amoeba_garrison
			is_country_type = amoeba_faction
			is_country_type = crystal
			is_country_type = crystal_faction
			is_country_type = guardian_dragon
			is_country_type = guardian_stellarite
			is_country_type = guardian_wraith
			is_country_type = guardian_hiver
			is_country_type = guardian_horror
			is_country_type = guardian_elderly_tiyanki
			is_country_type = ldragon_country
			is_country_type = guardian_hatchling
		}
	}

	immediate = {
		from = {
			remove_country_flag = hunted_fauna
			set_timed_country_flag = {
				flag = hunted_fauna
				days = 3600
			}
		}
	}
}

# Armageddon kills of a planet (depreciated)
planet_event = {
	id = onactionpops.16
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_orbital_bombardment = yes
		OR = {
			has_orbital_bombardment_stance = armageddon
			has_orbital_bombardment_stance = pox
			has_orbital_bombardment_stance = death
		}
		habitable_planet = yes
		planet_devastation >= 100
		num_pops < 2
	}
	
	immediate = {
		owner = {
			add_static_war_exhaustion = {
				attacker = from
				location = root
				value_for_planet_destruction = 0.5
			}
			country_event = { id = action.82 }
		}
		from = { country_event = { id = action.83 } }
		change_pc = pc_nuked
		remove_all_buildings = yes
		reroll_deposits = yes
		remove_modifier = "natural_beauty"
		remove_modifier = "atmospheric_aphrodisiac"
		remove_modifier = "atmospheric_hallucinogen"
		remove_modifier = "lush_planet"
		remove_modifier = "dangerous_wildlife"
		set_planet_flag = armageddon_nuked
	}
}

# add new archetype traits
country_event = {
	id = onactionpops.17
	
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		# has_global_flag = expanded_pops_active
		OR = {
			owner_species = { needs_class_trait = yes }
			any_owned_species = { needs_class_trait = yes }
		}
	}
	
	immediate = {
		owner_species = {
			if = {
				limit = { needs_class_trait = yes }
				add_class_trait_effect = yes
			}
		}
		every_owned_species = {
			limit = { needs_class_trait = yes }
			add_class_trait_effect = yes
		}
	}
}

# Crime Lord Deal Removed
country_event = {
	id = onactionpops.18
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_owned_planet = {
			has_modifier = crime_lord_deal
			planet_crime <= 10
		}
	}
	
	immediate = {
		every_owned_planet = {
			limit = {
				has_modifier = crime_lord_deal
				planet_crime <= 10
			}
			remove_modifier = "crime_lord_deal"
		}
	}
}